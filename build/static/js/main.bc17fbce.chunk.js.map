{"version":3,"sources":["images/cryptocurrency.png","components/Navbar.jsx","components/Loader.jsx","services/exchangeApi.js","services/cryptoApi.js","components/Cryptocurrencies.jsx","components/LineChart.jsx","components/CryptoDetails.jsx","components/Exchanges.jsx","services/cryptoNewsApi.js","components/News.jsx","components/Homepage.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","src","icon","size","Title","level","to","onClick","MenuOutlined","theme","Item","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","UpCircleOutlined","Loader","exchangeApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getValue","query","url","headers","Accept","useGetValueQuery","cryptoApiHeaders","createRequest","cryptoApi","getCryptos","count","getExchanges","getCryptoDetails","coinId","getCryptoHistory","timeperiod","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetExchangesQuery","useGetCryptoHistoryQuery","Cryptocurrencies","simplified","cryptosList","data","isFetching","coins","cryptos","setCryptos","searchTerm","setSearchTerm","exchangeValue","value","conversion_rate","filteredData","filter","coin","name","toLowerCase","includes","placeholder","onChange","e","target","gutter","map","currency","xs","sm","lg","id","title","rank","extra","iconUrl","alt","hoverable","millify","price","marketCap","change","Typography","LineChart","coinHistory","coinName","currentPrice","coinPrice","coinTimestamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scales","yAxes","ticks","beginAtZero","Text","Option","Select","CryptoDetails","useParams","setTimeperiod","cryptoDetails","stats","DollarCircleOutlined","NumberOutlined","volume","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfMarkets","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","slug","defaultValue","date","HTMLReactParser","description","links","link","type","href","rel","Panel","Collapse","Exchanges","exchangesList","exchanges","span","exchange","showArrow","header","marketShare","cryptoNewsHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImage","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","Homepage","globalStats","console","log","total","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","App","exact","path","style","color","textAlign","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","store","document","getElementById"],"mappings":"ySAAe,MAA0B,2C,OCwD1BA,EAjDA,WACX,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,wBAASG,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OAfAC,qBAAU,WACN,IAAMC,EAAe,kBAAMF,EAAcG,OAAOC,aAGhD,OAFAD,OAAOE,iBAAiB,SAAUH,GAClCA,IACO,kBAAMC,OAAOG,oBAAoB,SAAUJ,MACnD,IAEHD,qBAAU,WAEFJ,IADAE,GAAc,QAKnB,CAACA,IAGA,sBAAKQ,UAAU,gBAAf,UACI,sBAAKA,UAAU,iBAAf,UACI,cAAC,IAAD,CAAQC,IAAKC,EAAMC,KAAK,UACxB,cAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGL,UAAU,OAAtC,SAA6C,cAAC,IAAD,CAAMM,GAAG,IAAT,6BAC7C,cAAC,IAAD,CAAQN,UAAU,yBAAyBO,QAAS,kBAAMjB,GAAeD,IAAzE,SAAsF,cAACmB,EAAA,EAAD,SAEzFnB,GACG,eAAC,IAAD,CAAMoB,MAAM,OAAZ,UACI,cAAC,IAAKC,KAAN,CAAWR,KAAM,cAACS,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAML,GAAG,IAAT,oBAEJ,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACU,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAMN,GAAG,oBAAT,gCAEJ,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACW,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAMP,GAAG,aAAT,yBAEJ,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACY,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAMR,GAAG,QAAT,oBAEJ,cAAC,IAAKI,KAAN,CAAWR,KAAM,cAACa,EAAA,EAAD,IAAjB,SACI,cAAC,IAAD,CAAMT,GAAG,eAAT,kC,mDCvCTU,EANA,kBACb,qBAAKhB,UAAU,SAAf,SACE,cAAC,IAAD,O,gBCDSiB,EAAcC,YAAU,CACnCC,YAAa,cACXC,UAAWC,YAAe,CACxBC,QAAS,oCACXC,UAAW,SAACC,GAAD,MAAc,CACzBC,SAAUD,EAAQE,MAAM,CACtBA,MAAO,iBARmB,CAAEC,IAQD,4CARKC,QAAS,CAACC,OAAQ,4BAc1CC,EAAoBb,EAApBa,iBCdRC,EAAmB,CACvB,iBAAkB,+DAGdC,EAAgB,SAACL,GAAD,MAAU,CAAEA,MAAKC,QAASG,IAEnCE,EAAYf,YAAU,CACjCC,YAAa,YACbC,UAAWC,YAAe,CACxBC,QAAS,mCACXC,UAAW,SAACC,GAAD,MAAc,CACvBU,WAAYV,EAAQE,MAAM,CACxBA,MAAO,SAACS,GAAD,OAAWH,EAAc,gBAAD,OAAiBG,OAElDC,aAAcZ,EAAQE,MAAM,CAC1BA,MAAO,kBAAMM,EAAc,iBAE7BK,iBAAkBb,EAAQE,MAAM,CAC9BA,MAAO,SAACY,GAAD,OAAYN,EAAc,SAAD,OAAUM,OAE5CC,iBAAkBf,EAAQE,MAAM,CAC9BA,MAAO,gBAAGY,EAAH,EAAGA,OAAQE,EAAX,EAAWA,WAAX,OAA4BR,EAAc,QAAD,OAASM,EAAT,oBAA2BE,WAKlEC,EAAiGR,EAAjGQ,mBAAoBC,EAA6ET,EAA7ES,yBAA0BC,EAAmDV,EAAnDU,qBAAsBC,EAA6BX,EAA7BW,yBCyBpEC,EA5CU,SAAC,GAAoB,IAAD,EAAjBC,EAAiB,EAAjBA,WAExB,EAA0CL,EAD5BK,EAAa,GAAK,KAClBC,EAAd,EAAQC,KAAmBC,EAA3B,EAA2BA,WAC3B,EAA8B7D,mBAAQ,OAAC2D,QAAD,IAACA,GAAD,UAACA,EAAaC,YAAd,aAAC,EAAmBE,OAA1D,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAoChE,mBAAS,IAA7C,mBAAOiE,EAAP,KAAmBC,EAAnB,KACcC,EAAkBzB,IAAxBkB,KACFQ,EAAK,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAeE,gBAQ7B,OANA/D,qBAAU,WAAO,IAAD,IACZ0D,EAAU,OAACL,QAAD,IAACA,GAAD,UAACA,EAAaC,YAAd,aAAC,EAAmBE,OAC9B,IAAMQ,EAAY,OAAGX,QAAH,IAAGA,GAAH,UAAGA,EAAaC,YAAhB,aAAG,EAAmBE,MAAMS,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAKC,cAAcC,SAASV,EAAWS,kBAC3GV,EAAWM,KACZ,CAACX,EAAaM,IAEbJ,EAAmB,cAAC,EAAD,IAEnB,sCACMH,GACE,qBAAK9C,UAAU,gBAAf,SACI,uBAAOgE,YAAY,wBAAwBC,SAAU,SAACC,GAAD,OAAOZ,EAAcY,EAAEC,OAAOX,YAG3F,cAAC,IAAD,CAAKY,OAAQ,CAAC,GAAI,IAAKpE,UAAU,wBAAjC,gBACKmD,QADL,IACKA,OADL,EACKA,EAASkB,KAAI,SAACC,GAAD,OACV,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGzE,UAAU,cAAtC,SACI,cAAC,IAAD,CAAMM,GAAE,kBAAagE,EAASI,IAA9B,SACI,eAAC,IAAD,CACIC,MAAK,UAAKL,EAASM,KAAd,aAAuBN,EAAST,MACrCgB,MAAO,qBAAK7E,UAAU,eAAeC,IAAKqE,EAASQ,QAASC,IAAI,WAChEC,WAAS,EAHb,UAKI,wCAAWC,IAAQX,EAASY,MAAQ1B,MACpC,6CAAgByB,IAAQX,EAASa,UAAY3B,MAC7C,+CAAkByB,IAAQX,EAASc,QAAnC,aAT6Cd,EAASI,a,2FC5B9EtE,GAAUiF,IAAVjF,MAwDOkF,GAtDG,SAAC,GAOjB,IAP8D,IAAD,EAA1CC,EAA0C,EAA1CA,YAA2BC,GAAe,EAA7BC,aAA6B,EAAfD,UAE9C,EAA2C1D,IAA7ByB,EAAd,EAAQP,KAAoBC,EAA5B,EAA4BA,WACtBO,EAAK,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAeE,gBACvBiC,EAAY,GACZC,EAAgB,GAEbC,EAAI,EAAGA,GAAC,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAavC,YAAhB,iBAAG,EAAmB6C,eAAtB,aAAG,EAA4BC,QAAQF,GAAK,EAAG,CAAC,IAAD,MAC9DF,EAAUK,MAAgB,OAAXR,QAAW,IAAXA,GAAA,UAAAA,EAAavC,YAAb,eAAmB6C,QAAQD,GAAGV,OAAQ1B,GAGvD,IAAK,IAAIoC,EAAI,EAAGA,GAAC,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAavC,YAAhB,iBAAG,EAAmB6C,eAAtB,aAAG,EAA4BC,QAAQF,GAAK,EAAG,CAAC,IAAD,MAC9DD,EAAcI,KAAK,IAAIC,KAAJ,OAAST,QAAT,IAASA,GAAT,UAASA,EAAavC,YAAtB,aAAS,EAAmB6C,QAAQD,GAAGK,WAAWC,sBAGvE,IAAMlD,EAAO,CACXmD,OAAQR,EACRS,SAAU,CACR,CACEC,MAAO,eACPrD,KAAM0C,EACNY,MAAM,EACNC,gBAAiB,UACjBC,YAAa,aAgBnB,OAAIvD,EAAmB,cAAC,EAAD,IAErB,qCACE,eAAC,IAAD,CAAKjD,UAAU,eAAf,UACE,eAACI,GAAD,CAAOC,MAAO,EAAGL,UAAU,cAA3B,UAA0CwF,EAA1C,mBACA,eAAC,IAAD,CAAKxF,UAAU,kBAAf,UACE,eAACI,GAAD,CAAOC,MAAO,EAAGL,UAAU,eAA3B,4BAAmDuF,QAAnD,IAAmDA,GAAnD,UAAmDA,EAAavC,YAAhE,aAAmD,EAAmBoC,OAAtE,OACA,eAAChF,GAAD,CAAOC,MAAO,EAAGL,UAAU,gBAA3B,qBAAoDwF,EAApD,cAAyEE,EAAUA,EAAUI,OAAS,YAG1G,cAAC,KAAD,CAAM9C,KAAMA,EAAMyD,QArBN,CACdC,OAAQ,CACNC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,aC5BjBzG,GAAgBiF,IAAhBjF,MAAO0G,GAASzB,IAATyB,KACPC,GAAWC,IAAXD,OA6FOE,GA3FO,WAAO,IAAD,QAClB3E,EAAW4E,cAAX5E,OACR,EAAoClD,mBAAS,MAA7C,mBAAOoD,EAAP,KAAmB2E,EAAnB,KACA,EAA6BzE,EAAyBJ,GAA9CU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACAsC,EAAgB3C,EAAyB,CAAEN,SAAQE,eAAzDQ,KACFoE,EAAa,OAAGpE,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYY,KACpBL,EAAkBzB,IAAxBkB,KACFQ,EAAK,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAeE,gBAE7B,GAAIR,EAAY,OAAO,cAAC,EAAD,IAEvB,IACMoE,EAAQ,CACZ,CAAE1C,MAAO,eAAgBnB,MAAM,MAAD,OAAQ4D,EAAclC,OAASD,IAAQmC,EAAclC,MAAQ1B,IAAUtD,KAAM,cAACoH,EAAA,EAAD,KAC3G,CAAE3C,MAAO,OAAQnB,MAAO4D,EAAcxC,KAAM1E,KAAM,cAACqH,EAAA,EAAD,KAClD,CAAE5C,MAAO,aAAcnB,MAAM,MAAD,OAAQ4D,EAAcI,QAAUvC,IAAQmC,EAAcI,OAAShE,IAAUtD,KAAM,cAACuH,EAAA,EAAD,KAC3G,CAAE9C,MAAO,aAAcnB,MAAM,MAAD,OAAQ4D,EAAcjC,WAAaF,IAAQmC,EAAcjC,UAAY3B,IAAUtD,KAAM,cAACoH,EAAA,EAAD,KACjH,CAAE3C,MAAO,4BAA6BnB,MAAM,MAAD,OAAQyB,IAAQmC,EAAcM,YAAYxC,MAAQ1B,IAAUtD,KAAM,cAACyH,EAAA,EAAD,MAGzGC,EAAe,CACnB,CAAEjD,MAAO,oBAAqBnB,MAAO4D,EAAcS,gBAAiB3H,KAAM,cAACU,EAAA,EAAD,KAC1E,CAAE+D,MAAO,sBAAuBnB,MAAO4D,EAAcU,kBAAmB5H,KAAM,cAACW,EAAA,EAAD,KAC9E,CAAE8D,MAAO,kBAAmBnB,MAAO4D,EAAcW,eAAiB,cAACC,EAAA,EAAD,IAAoB,cAACC,EAAA,EAAD,IAAkB/H,KAAM,cAACgI,EAAA,EAAD,KAC9G,CAAEvD,MAAO,eAAgBnB,MAAM,MAAD,OAAQyB,IAAQmC,EAAce,YAAc3E,IAAUtD,KAAM,cAACgI,EAAA,EAAD,KAC1F,CAAEvD,MAAO,qBAAsBnB,MAAM,MAAD,OAAQyB,IAAQmC,EAAcgB,kBAAoB5E,IAAUtD,KAAM,cAACgI,EAAA,EAAD,MAGxG,OACE,eAAC,IAAD,CAAKlI,UAAU,wBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,yBAAf,UACE,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,iBACGgD,QADH,IACGA,GADH,UACGA,EAAMA,YADT,aACG,EAAYY,KAAKC,KADpB,YAC4Bb,QAD5B,IAC4BA,GAD5B,UAC4BA,EAAMA,YADlC,aAC4B,EAAYY,KAAKyE,KAD7C,aAGA,8BAAIjB,EAAcvD,KAAlB,sFAEF,cAAC,IAAD,CAAQyE,aAAa,MAAMtI,UAAU,oBAAoBgE,YAAY,oBAAoBC,SAAU,SAACT,GAAD,OAAW2D,EAAc3D,IAA5H,SAzBS,CAAC,MAAO,KAAM,MAAO,KAAM,MA0B5Ba,KAAI,SAACkE,GAAD,OAAU,cAACxB,GAAD,UAAoBwB,GAAPA,QAEnC,cAAC,GAAD,CAAWhD,YAAaA,EAAaE,aAAcR,IAAQmC,EAAclC,OAAQM,SAAU4B,EAAcvD,OACzG,eAAC,IAAD,CAAK7D,UAAU,kBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,wBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACE,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,UAAmDoH,EAAcvD,KAAjE,uBACA,uEAA0CuD,EAAcvD,KAAxD,6EAEDwD,EAAMhD,KAAI,gBAAGnE,EAAH,EAAGA,KAAMyE,EAAT,EAASA,MAAOnB,EAAhB,EAAgBA,MAAhB,OACT,eAAC,IAAD,CAAKxD,UAAU,aAAf,UACE,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACE,cAAC8G,GAAD,UAAO5G,IACP,cAAC4G,GAAD,UAAOnC,OAET,cAACmC,GAAD,CAAM9G,UAAU,QAAhB,SAAyBwD,aAI/B,eAAC,IAAD,CAAKxD,UAAU,mBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,gCAAf,UACE,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,8BACA,uEAA0CoH,EAAcvD,KAAxD,6EAED+D,EAAavD,KAAI,gBAAGnE,EAAH,EAAGA,KAAMyE,EAAT,EAASA,MAAOnB,EAAhB,EAAgBA,MAAhB,OAChB,eAAC,IAAD,CAAKxD,UAAU,aAAf,UACE,eAAC,IAAD,CAAKA,UAAU,kBAAf,UACE,cAAC8G,GAAD,UAAO5G,IACP,cAAC4G,GAAD,UAAOnC,OAET,cAACmC,GAAD,CAAM9G,UAAU,QAAhB,SAAyBwD,gBAKjC,eAAC,IAAD,CAAKxD,UAAU,iBAAf,UACE,eAAC,IAAD,CAAKA,UAAU,YAAf,UACE,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,qBAA2DoH,EAAcvD,KAAzE,OACC2E,YAAgBpB,EAAcqB,gBAEjC,eAAC,IAAD,CAAKzI,UAAU,aAAf,UACE,eAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,uBAA3B,UAAmDoH,EAAcvD,KAAjE,YADF,UAEGuD,EAAcsB,aAFjB,aAEG,EAAqBrE,KAAI,SAACsE,GAAD,OACxB,eAAC,IAAD,CAAK3I,UAAU,YAAf,UACE,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SAAwC2I,EAAKC,OAC7C,mBAAGC,KAAMF,EAAKhH,IAAKwC,OAAO,SAAS2E,IAAI,aAAvC,SAAqDH,EAAK9E,SAF5B8E,EAAK9E,mB,UCtFzCiD,GAASzB,IAATyB,KACAiC,GAAUC,KAAVD,MA+COE,GA7CG,WAAO,IAAD,EACtB,EAA6BtG,IAArBK,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRiG,EAAa,OAAGlG,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYmG,UACpB5F,EAAkBzB,IAAxBkB,KACFQ,EAAK,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAeE,gBAE7B,OAAIR,EAAmB,cAAC,EAAD,IAErB,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKmG,KAAM,EAAX,uBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,8BACA,cAAC,IAAD,CAAKA,KAAM,EAAX,qBACA,cAAC,IAAD,CAAKA,KAAM,EAAX,uBAEF,cAAC,IAAD,UACGF,EAAc7E,KAAI,SAACgF,GAAD,OACjB,cAAC,IAAD,CAAKD,KAAM,GAAX,SACE,cAAC,KAAD,UACE,cAACL,GAAD,CAEEO,WAAW,EACXC,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKH,KAAM,EAAX,UACE,cAAC,GAAD,UAAM,mCAASC,EAASzE,KAAlB,SACN,cAAC,IAAD,CAAQ5E,UAAU,iBAAiBC,IAAKoJ,EAASvE,UACjD,cAAC,GAAD,UAAM,iCAASuE,EAASxF,YAE1B,eAAC,IAAD,CAAKuF,KAAM,EAAX,gBAAkBnE,IAAQoE,EAASxB,gBAAkBrE,MACrD,cAAC,IAAD,CAAK4F,KAAM,EAAX,SAAenE,IAAQoE,EAASxB,mBAChC,eAAC,IAAD,CAAKuB,KAAM,EAAX,UAAenE,IAAQoE,EAASG,aAAhC,SARQH,EAAS3E,IAJvB,SAgBG8D,YAAgBa,EAASZ,aAAe,KAfpCY,EAAS3E,iB,+BC9BxB+E,GAAoB,CACtB,iBAAkB,OAClB,kBAAmB,mCACnB,iBAAkB,sDAITC,GAAgBxI,YAAU,CACnCC,YAAa,gBACbC,UAAWC,YAAe,CACtBC,QAAS,6CACbC,UAAW,SAAEC,GAAF,MAAe,CACtBmI,cAAenI,EAAQE,MAAM,CACzBA,MAAO,gBAAGkI,EAAH,EAAGA,aAAczH,EAAjB,EAAiBA,MAAjB,MAPa,CAAER,IAO4B,kBAAD,OAAmBiI,EAAnB,8DAAqFzH,GAP3GP,QAAS6H,WAYjCI,GAA0BH,GAA1BG,sBCbTC,GAAY,kEACVhD,GAAgBzB,IAAhByB,KAAM1G,GAAUiF,IAAVjF,MACN2G,GAAWC,IAAXD,OAiDOgD,GA/CF,SAAC,GAAoB,IAAD,IAAjBjH,EAAiB,EAAjBA,WACd,EAAwC1D,mBAAS,kBAAjD,mBAAOwK,EAAP,KAAqBI,EAArB,KACQhH,EAASP,EAAmB,KAA5BO,KACMiH,EAAeJ,GAAsB,CAAED,eAAczH,MAAOW,EAAa,EAAI,KAAnFE,KAER,OAAI,OAACiH,QAAD,IAACA,OAAD,EAACA,EAAYzG,OAEf,eAAC,IAAD,CAAKY,OAAQ,CAAC,GAAI,IAAlB,WACItB,GACA,cAAC,IAAD,CAAKsG,KAAM,GAAX,SACE,eAAC,IAAD,CACEc,YAAU,EACVlK,UAAU,cACVgE,YAAY,kBACZmG,iBAAiB,WACjBlG,SAAU,SAACT,GAAD,OAAWwG,EAAgBxG,IACrC4G,aAAc,SAACC,EAAOC,GAAR,OAAmBA,EAAOC,SAASzG,cAAc0G,QAAQH,EAAMvG,gBAAkB,GANjG,UAQE,cAAC,GAAD,CAAQN,MAAM,gBAAd,2BAAmC,UARrC,OASGR,QATH,IASGA,GATH,UASGA,EAAMA,YATT,iBASG,EAAYE,aATf,aASG,EAAmBmB,KAAI,SAACC,GAAD,OAAc,cAAC,GAAD,CAAQd,MAAOc,EAAST,KAAxB,SAAmDS,EAAST,MAAzBS,EAAST,cAIvFoG,EAAWzG,MAAMa,KAAI,SAACoG,EAAM7E,GAAP,uBACpB,cAAC,IAAD,CAAKrB,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAzB,SACE,cAAC,IAAD,CAAMO,WAAS,EAAChF,UAAU,YAA1B,SACE,oBAAG6I,KAAM4B,EAAK9I,IAAKwC,OAAO,SAAS2E,IAAI,aAAvC,UACE,sBAAK9I,UAAU,uBAAf,UACE,cAAC,GAAD,CAAOA,UAAU,aAAaK,MAAO,EAArC,SAAyCoK,EAAK5G,OAC9C,qBAAK5D,KAAS,OAAJwK,QAAI,IAAJA,GAAA,UAAAA,EAAMC,aAAN,mBAAaC,iBAAb,eAAwBC,aAAcd,GAAW/E,IAAI,QAEjE,4BAAI0F,EAAKhC,YAAY3C,OAAS,IAA1B,UAAmC2E,EAAKhC,YAAYoC,UAAU,EAAG,KAAjE,OAA6EJ,EAAKhC,cACtF,sBAAKzI,UAAU,qBAAf,UACE,gCACE,cAAC,IAAD,CAAQC,KAAK,UAAAwK,EAAKK,SAAS,UAAd,mBAAkBJ,aAAlB,mBAAyBC,iBAAzB,eAAoCC,aAAcd,GAAW/E,IAAI,KAC9E,cAAC,GAAD,CAAM/E,UAAU,gBAAhB,mBAAiCyK,EAAKK,SAAS,UAA/C,aAAiC,EAAkBjH,UAErD,cAAC,GAAD,UAAOkH,KAAON,EAAKO,eAAeC,QAAQ,MAAMC,qBAbvBtF,SAnBR,cAAC,EAAD,KCLzBxF,GAAUiF,IAAVjF,MAmCO+K,GAjCE,WAAO,IAAD,EACrB,EAA6B1I,EAAmB,IAAxCO,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRmI,EAAW,OAAGpI,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYqE,MACnB9D,EAAkBzB,IAAvBkB,KACFQ,EAAK,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAeE,gBAG7B,OAFA4H,QAAQC,IAAIF,GAERnI,EAAmB,cAAC,EAAD,IAErB,qCACE,cAAC,GAAD,CAAO5C,MAAO,EAAGL,UAAU,UAA3B,iCACA,eAAC,IAAD,CAAKoE,OAAQ,CAAC,GAAI,IAAlB,UACE,cAAC,IAAD,CAAKgF,KAAM,GAAX,SAAe,cAAC,KAAD,CAAWzE,MAAM,yBAAyBnB,MAAO4H,EAAYG,UAC5E,cAAC,IAAD,CAAKnC,KAAM,GAAX,SAAe,cAAC,KAAD,CAAWzE,MAAM,kBAAkBnB,MAAOyB,IAAQmG,EAAYI,oBAC7E,cAAC,IAAD,CAAKpC,KAAM,GAAX,SAAe,cAAC,KAAD,CAAWzE,MAAM,oBAAoBnB,MAAK,aAAQyB,IAAQmG,EAAYK,eAAiBjI,QACtG,cAAC,IAAD,CAAK4F,KAAM,GAAX,SAAe,cAAC,KAAD,CAAWzE,MAAM,mBAAmBnB,MAAK,aAAQyB,IAAQmG,EAAYM,eAAiBlI,QAErG,cAAC,IAAD,CAAK4F,KAAM,GAAX,SAAe,cAAC,KAAD,CAAWzE,MAAM,gBAAgBnB,MAAOyB,IAAQmG,EAAYO,qBAE7E,sBAAK3L,UAAU,yBAAf,UACE,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,aAA3B,yCACA,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,YAA3B,SAAuC,cAAC,IAAD,CAAMM,GAAG,oBAAT,4BAEzC,cAAC,EAAD,CAAkBwC,YAAU,IAC5B,sBAAK9C,UAAU,yBAAf,UACE,cAAC,GAAD,CAAOK,MAAO,EAAGL,UAAU,aAA3B,gCACA,cAAC,GAAD,CAAOK,MAAO,EAAd,SAAiB,cAAC,IAAD,CAAMC,GAAG,QAAT,4BAEnB,cAAC,GAAD,CAAMwC,YAAU,QCYP8I,I,OA9CH,WACR,OACI,sBAAK5L,UAAU,MAAf,UACI,qBAAKA,UAAU,SAAf,SACI,cAAC,EAAD,MAEJ,sBAAKA,UAAU,OAAf,UACI,cAAC,IAAD,UACI,qBAAKA,UAAU,SAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO6L,OAAK,EAACC,KAAK,IAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,oBAAlB,SACI,cAAC,EAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,kBAAlB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAAlB,SACI,cAAC,GAAD,aAMhB,sBAAK9L,UAAU,SAAf,UACI,cAAC,IAAWI,MAAZ,CAAkBC,MAAO,EAAG0L,MAAO,CAAEC,MAAO,QAASC,UAAW,UAAhE,+CAIA,eAAC,IAAD,WACI,cAAC,IAAD,CAAM3L,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,aAAT,uBACA,cAAC,IAAD,CAAMA,GAAG,QAAT,gC,kBCvCT4L,gBAAe,CAC1BC,SAAO,oBACFlK,EAAUd,YAAcc,EAAUkK,SADhC,eAEFzC,GAAcvI,YAAcuI,GAAcyC,SAFxC,eAGFlL,EAAYE,YAAcF,EAAYkL,SAHpC,GAKPC,WAAY,SAACC,GAAD,OACRA,IAAuBC,OAAOrK,EAAUmK,e,OCJhDG,IAASC,OACL,cAAC,IAAD,UACI,cAAC,IAAD,CAAUC,MAAQA,GAAlB,SACI,cAAC,GAAD,QAGRC,SAASC,eAAe,W","file":"static/js/main.bc17fbce.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","import React, { useState, useEffect } from 'react';\r\nimport { Button, Menu, Typography, Avatar } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport { HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined, UpCircleOutlined } from '@ant-design/icons';\r\n\r\nimport icon from '../images/cryptocurrency.png';\r\n\r\nconst Navbar = () => {\r\n    const [activeMenu, setActiveMenu] = useState(true);\r\n    const [screenSize, setScreenSize] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        const handleResize = () => setScreenSize(window.innerWidth);\r\n        window.addEventListener('resize', handleResize);\r\n        handleResize();\r\n        return () => window.removeEventListener('resize', handleResize);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (screenSize <= 800) {\r\n            setActiveMenu(false);\r\n        } else {\r\n            setActiveMenu(true);\r\n        }\r\n    }, [screenSize]);\r\n\r\n    return (\r\n        <div className=\"nav-container\">\r\n            <div className=\"logo-container\">\r\n                <Avatar src={icon} size=\"large\" />\r\n                <Typography.Title level={2} className=\"logo\"><Link to=\"/\">Krypto-Knight</Link></Typography.Title>\r\n                <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\r\n            </div>\r\n            {activeMenu && (\r\n                <Menu theme=\"dark\">\r\n                    <Menu.Item icon={<HomeOutlined />}>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<FundOutlined />}>\r\n                        <Link to=\"/cryptocurrencies\">Cryptocurrencies</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<MoneyCollectOutlined />}>\r\n                        <Link to=\"/exchanges\">Exchanges</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<BulbOutlined />}>\r\n                        <Link to=\"/news\">News</Link>\r\n                    </Menu.Item>\r\n                    <Menu.Item icon={<UpCircleOutlined />}>\r\n                        <Link to=\"/predictions\">Predictions</Link>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nconst Loader = () => (\r\n  <div className=\"loader\">\r\n    <Spin />\r\n  </div>\r\n);\r\n\r\nexport default Loader;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst createRequest = (url) => ({ url,headers: {Accept: 'application/json'}});\r\n\r\nexport const exchangeApi = createApi({\r\n  reducerPath: 'exchangeApi',\r\n    baseQuery: fetchBaseQuery({\r\n      baseUrl: 'https://v6.exchangerate-api.com' }),\r\n    endpoints: (builder) => ({\r\n    getValue: builder.query({\r\n      query: () => createRequest(`/v6/a67f0a350c5b028c783d9817/pair/USD/INR`),\r\n    }),\r\n    \r\n  }),\r\n});\r\n\r\nexport const {useGetValueQuery} = exchangeApi;","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nconst cryptoApiHeaders = {\r\n  'x-access-token': 'coinranking09dc33353b5af2d4fff4986e6dd2ca676e3017da3c23aae4',\r\n};\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\r\n\r\nexport const cryptoApi = createApi({\r\n  reducerPath: 'cryptoApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://api.coinranking.com/v2' }),\r\n  endpoints: (builder) => ({\r\n    getCryptos: builder.query({\r\n      query: (count) => createRequest(`/coins?limit=${count}`),\r\n    }),\r\n    getExchanges: builder.query({\r\n      query: () => createRequest('/exchanges'),\r\n    }),\r\n    getCryptoDetails: builder.query({\r\n      query: (coinId) => createRequest(`/coin/${coinId}`),\r\n    }),\r\n    getCryptoHistory: builder.query({\r\n      query: ({ coinId, timeperiod }) => createRequest(`coin/${coinId}/history/${timeperiod}`),\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetExchangesQuery, useGetCryptoHistoryQuery } = cryptoApi;","import React, { useState, useEffect } from 'react'\r\nimport millify from 'millify'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card, Row, Col } from 'antd'\r\n\r\nimport Loader from './Loader'\r\nimport { useGetValueQuery } from '../services/exchangeApi'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\n\r\nconst Cryptocurrencies = ({ simplified }) => {\r\n    const count = simplified ? 10 : 100\r\n    const { data: cryptosList, isFetching } = useGetCryptosQuery(count)\r\n    const [cryptos, setCryptos] = useState(cryptosList?.data?.coins)\r\n    const [searchTerm, setSearchTerm] = useState('')\r\n    const { data: exchangeValue } = useGetValueQuery();\r\n    const value = exchangeValue?.conversion_rate;\r\n\r\n    useEffect(() => {\r\n        setCryptos(cryptosList?.data?.coins)\r\n        const filteredData = cryptosList?.data?.coins.filter((coin) => coin.name.toLowerCase().includes(searchTerm.toLowerCase()))\r\n        setCryptos(filteredData)\r\n    }, [cryptosList, searchTerm]);\r\n\r\n    if (isFetching) return <Loader />;\r\n    return (\r\n        <>\r\n            {!simplified && (\r\n                <div className=\"search-crypto\">\r\n                    <input placeholder=\"Search Cryptocurrency\" onChange={(e) => setSearchTerm(e.target.value)} />\r\n                </div>\r\n            )}\r\n            <Row gutter={[32, 32]} className=\"crypto-card-container\">\r\n                {cryptos?.map((currency) => (\r\n                    <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id}>\r\n                        <Link to={`/crypto/${currency.id}`}>\r\n                            <Card\r\n                                title={`${currency.rank}. ${currency.name}`}\r\n                                extra={<img className=\"crypto-image\" src={currency.iconUrl} alt='crypto' />}\r\n                                hoverable\r\n                            >\r\n                                <p>Price: {millify(currency.price * value)}</p>\r\n                                <p>Market Cap: {millify(currency.marketCap * value)}</p>\r\n                                <p>Daily Change: {millify(currency.change)}%</p>\r\n                            </Card>\r\n\r\n                        </Link>\r\n                    </Col>\r\n                )\r\n                )}\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\nexport default Cryptocurrencies\r\n","import React from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Col, Row, Typography } from 'antd';\r\nimport { useGetValueQuery } from '../services/exchangeApi'\r\nimport Loader from './Loader'\r\nconst { Title } = Typography;\r\n\r\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\r\n\r\n  const { data: exchangeValue,isFetching } = useGetValueQuery();\r\n  const value = exchangeValue?.conversion_rate;\r\n  const coinPrice = [];\r\n  const coinTimestamp = [];\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinPrice.push(coinHistory?.data?.history[i].price * value);\r\n  }\r\n\r\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\r\n    coinTimestamp.push(new Date(coinHistory?.data?.history[i].timestamp).toLocaleDateString());\r\n  }\r\n\r\n  const data = {\r\n    labels: coinTimestamp,\r\n    datasets: [\r\n      {\r\n        label: 'Price In INR',\r\n        data: coinPrice,\r\n        fill: false,\r\n        backgroundColor: '#0071bd',\r\n        borderColor: '#0071bd',\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n  if (isFetching) return <Loader />\r\n  return (\r\n    <>\r\n      <Row className=\"chart-header\">\r\n        <Title level={2} className=\"chart-title\">{coinName} Price Chart </Title>\r\n        <Col className=\"price-container\">\r\n          <Title level={5} className=\"price-change\">Change: {coinHistory?.data?.change}%</Title>\r\n          <Title level={5} className=\"current-price\">Current {coinName} Price: Rs {coinPrice[coinPrice.length - 1]}</Title>\r\n        </Col>\r\n      </Row>\r\n      <Line data={data} options={options} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LineChart;\r\n","import React, { useState } from 'react'\r\nimport HTMLReactParser from 'html-react-parser'\r\nimport { useParams } from 'react-router-dom'\r\nimport millify from 'millify'\r\nimport { Col, Row, Typography, Select } from 'antd'\r\nimport { MoneyCollectOutlined, DollarCircleOutlined, FundOutlined, ExclamationCircleOutlined, StopOutlined, TrophyOutlined, CheckOutlined, NumberOutlined, ThunderboltOutlined } from '@ant-design/icons';\r\n\r\nimport { useGetValueQuery } from '../services/exchangeApi'\r\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader'\r\nimport LineChart from './LineChart'\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst CryptoDetails = () => {\r\n  const { coinId } = useParams()\r\n  const [timeperiod, setTimeperiod] = useState('7d')\r\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId)\r\n  const { data: coinHistory } = useGetCryptoHistoryQuery({ coinId, timeperiod })\r\n  const cryptoDetails = data?.data?.coin\r\n  const { data: exchangeValue } = useGetValueQuery();\r\n  const value = exchangeValue?.conversion_rate;\r\n\r\n  if (isFetching) return <Loader />\r\n\r\n  const time = ['24h', '7d', '30d', '1y', '5y']\r\n  const stats = [\r\n    { title: 'Price to INR', value: `Rs ${cryptoDetails.price && millify(cryptoDetails.price * value)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'Rank', value: cryptoDetails.rank, icon: <NumberOutlined /> },\r\n    { title: '24h Volume', value: `Rs ${cryptoDetails.volume && millify(cryptoDetails.volume * value)}`, icon: <ThunderboltOutlined /> },\r\n    { title: 'Market Cap', value: `Rs ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap * value)}`, icon: <DollarCircleOutlined /> },\r\n    { title: 'All-time-high(daily avg.)', value: `Rs ${millify(cryptoDetails.allTimeHigh.price * value)}`, icon: <TrophyOutlined /> },\r\n  ]\r\n\r\n  const genericStats = [\r\n    { title: 'Number Of Markets', value: cryptoDetails.numberOfMarkets, icon: <FundOutlined /> },\r\n    { title: 'Number Of Exchanges', value: cryptoDetails.numberOfExchanges, icon: <MoneyCollectOutlined /> },\r\n    { title: 'Aprroved Supply', value: cryptoDetails.approvedSupply ? <CheckOutlined /> : <StopOutlined />, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Total Supply', value: `Rs ${millify(cryptoDetails.totalSupply * value)}`, icon: <ExclamationCircleOutlined /> },\r\n    { title: 'Circulating Supply', value: `Rs ${millify(cryptoDetails.circulatingSupply * value)}`, icon: <ExclamationCircleOutlined /> },\r\n  ]\r\n\r\n  return (\r\n    <Col className=\"coin-detail-container\">\r\n      <Col className=\"coin-heading-container\">\r\n        <Title level={2} className=\"coin-name\">\r\n          {data?.data?.coin.name} ({data?.data?.coin.slug}) Price\r\n        </Title>\r\n        <p>{cryptoDetails.name} live price in Indian Rs (INR). View value statistics, market cap and supply.</p>\r\n      </Col>\r\n      <Select defaultValue=\"24h\" className=\"select-timeperiod\" placeholder=\"Select Timeperiod\" onChange={(value) => setTimeperiod(value)}>\r\n        {time.map((date) => <Option key={date}>{date}</Option>)}\r\n      </Select>\r\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name} />\r\n      <Col className=\"stats-container\">\r\n        <Col className=\"coin-value-statistics\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Value Statistics</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {stats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"other-stats-info\">\r\n          <Col className=\"coin-value-statistics-heading\">\r\n            <Title level={3} className=\"coin-details-heading\">Other Stats Info</Title>\r\n            <p>An overview showing the statistics of {cryptoDetails.name}, such as the base and quote currency, the rank, and trading volume.</p>\r\n          </Col>\r\n          {genericStats.map(({ icon, title, value }) => (\r\n            <Col className=\"coin-stats\">\r\n              <Col className=\"coin-stats-name\">\r\n                <Text>{icon}</Text>\r\n                <Text>{title}</Text>\r\n              </Col>\r\n              <Text className=\"stats\">{value}</Text>\r\n            </Col>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n      <Col className=\"coin-desc-link\">\r\n        <Row className=\"coin-desc\">\r\n          <Title level={3} className=\"coin-details-heading\">What is {cryptoDetails.name}?</Title>\r\n          {HTMLReactParser(cryptoDetails.description)}\r\n        </Row>\r\n        <Col className=\"coin-links\">\r\n          <Title level={3} className=\"coin-details-heading\">{cryptoDetails.name} Links</Title>\r\n          {cryptoDetails.links?.map((link) => (\r\n            <Row className=\"coin-link\" key={link.name}>\r\n              <Title level={5} className=\"link-name\">{link.type}</Title>\r\n              <a href={link.url} target=\"_blank\" rel=\"noreferrer\">{link.name}</a>\r\n            </Row>\r\n          ))}\r\n        </Col>\r\n      </Col>\r\n    </Col>\r\n  )\r\n}\r\n\r\nexport default CryptoDetails;","import React from 'react'\r\nimport millify from 'millify'\r\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd'\r\nimport HTMLReactParser from 'html-react-parser'\r\n\r\nimport { useGetValueQuery } from '../services/exchangeApi'\r\nimport { useGetExchangesQuery } from '../services/cryptoApi'\r\nimport Loader from './Loader'\r\n\r\nconst { Text } = Typography\r\nconst { Panel } = Collapse\r\n\r\nconst Exchanges = () => {\r\n  const { data, isFetching } = useGetExchangesQuery();\r\n  const exchangesList = data?.data?.exchanges;\r\n  const { data: exchangeValue } = useGetValueQuery();\r\n  const value = exchangeValue?.conversion_rate;\r\n\r\n  if (isFetching) return <Loader />\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col span={6}>Exchanges</Col>\r\n        <Col span={6}>24h Trade Volume</Col>\r\n        <Col span={6}>Markets</Col>\r\n        <Col span={6}>Change</Col>\r\n      </Row>\r\n      <Row>\r\n        {exchangesList.map((exchange) => (\r\n          <Col span={24}>\r\n            <Collapse>\r\n              <Panel\r\n                key={exchange.id}\r\n                showArrow={false}\r\n                header={(\r\n                  <Row key={exchange.id}>\r\n                    <Col span={6}>\r\n                      <Text><strong>{exchange.rank}.</strong></Text>\r\n                      <Avatar className=\"exchange-image\" src={exchange.iconUrl} />\r\n                      <Text><strong>{exchange.name}</strong></Text>\r\n                    </Col>\r\n                    <Col span={6}>Rs {millify(exchange.numberOfMarkets * value)}</Col>\r\n                    <Col span={6}>{millify(exchange.numberOfMarkets)}</Col>\r\n                    <Col span={6}>{millify(exchange.marketShare)}%</Col>\r\n                  </Row>\r\n                )}\r\n              >\r\n                {HTMLReactParser(exchange.description || '')}\r\n              </Panel>\r\n            </Collapse>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Exchanges\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nconst cryptoNewsHeaders = {\r\n    'x-bingapis-sdk': 'true',\r\n    'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n    'x-rapidapi-key': 'b6e94b9305msh3ad7395ab0934aep15aed2jsn10c6e6fc5c2e'\r\n}\r\n\r\nconst createRequest = (url) => ({ url, headers: cryptoNewsHeaders })\r\nexport const cryptoNewsApi = createApi({\r\n    reducerPath: 'cryptoNewsApi',\r\n    baseQuery: fetchBaseQuery({\r\n        baseUrl: 'https://bing-news-search1.p.rapidapi.com'}),\r\n    endpoints: ( builder )=> ({\r\n        getCryptoNews: builder.query({\r\n            query: ({ newsCategory, count }) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`)\r\n        })\r\n    })\r\n})\r\n\r\nexport const { useGetCryptoNewsQuery } = cryptoNewsApi","import React, { useState } from 'react'\r\nimport { Select, Typography, Row, Col, Avatar, Card } from 'antd'\r\nimport moment from 'moment'\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport { useGetCryptoNewsQuery } from '../services/cryptoNewsApi'\r\nimport Loader from './Loader'\r\n\r\nconst demoImage = 'https://www.bing.com/th?id=OVFT.mpzuVZnv8dwIMRfQGPbOPC&pid=News'\r\nconst { Text, Title } = Typography\r\nconst { Option } = Select\r\n\r\nconst News = ({ simplified }) => {\r\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency')\r\n  const { data } = useGetCryptosQuery(100)\r\n  const { data: cryptoNews } = useGetCryptoNewsQuery({ newsCategory, count: simplified ? 6 : 12 })\r\n\r\n  if (!cryptoNews?.value) return <Loader />\r\n  return (\r\n    <Row gutter={[24, 24]}>\r\n      {!simplified && (\r\n        <Col span={24}>\r\n          <Select\r\n            showSearch\r\n            className=\"select-news\"\r\n            placeholder=\"Select a Crypto\"\r\n            optionFilterProp=\"children\"\r\n            onChange={(value) => setNewsCategory(value)}\r\n            filterOption={(input, option) => option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n          >\r\n            <Option value=\"Cryptocurency\" key={\"crypto\"}>Cryptocurrency</Option>\r\n            {data?.data?.coins?.map((currency) => <Option value={currency.name} key={currency.name}>{currency.name}</Option>)}\r\n          </Select>\r\n        </Col>\r\n      )}\r\n      {cryptoNews.value.map((news, i) => (\r\n        <Col xs={24} sm={12} lg={8} key={i}>\r\n          <Card hoverable className=\"news-card\">\r\n            <a href={news.url} target=\"_blank\" rel=\"noreferrer\">\r\n              <div className=\"news-image-container\">\r\n                <Title className=\"news-title\" level={4}>{news.name}</Title>\r\n                <img src={news?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n              </div>\r\n              <p>{news.description.length > 100 ? `${news.description.substring(0, 100)}...` : news.description}</p>\r\n              <div className=\"provider-container\">\r\n                <div>\r\n                  <Avatar src={news.provider[0]?.image?.thumbnail?.contentUrl || demoImage} alt=\"\" />\r\n                  <Text className=\"provider-name\">{news.provider[0]?.name}</Text>\r\n                </div>\r\n                <Text>{moment(news.datePublished).startOf('ss').fromNow()}</Text>\r\n              </div>\r\n            </a>\r\n          </Card>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default News\r\n","import React from 'react'\r\nimport millify from 'millify'\r\nimport { Typography, Row, Col, Statistic } from 'antd'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { useGetCryptosQuery } from '../services/cryptoApi'\r\nimport Cryptocurrencies from './Cryptocurrencies'\r\nimport News from './News'\r\nimport Loader from './Loader'\r\nimport { useGetValueQuery } from '../services/exchangeApi'\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Homepage = () => {\r\n  const { data, isFetching } = useGetCryptosQuery(10);\r\n  const globalStats = data?.data?.stats;\r\n  const { data:exchangeValue } = useGetValueQuery();\r\n  const value = exchangeValue?.conversion_rate;\r\n  console.log(globalStats)\r\n  \r\n  if (isFetching) return <Loader />\r\n  return (\r\n    <>\r\n      <Title level={2} className=\"heading\">Global Crypto Stats</Title>\r\n      <Row gutter={[32, 32]}>\r\n        <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value={globalStats.total} /></Col>\r\n        <Col span={12}><Statistic title=\"Total Exchanges\" value={millify(globalStats.totalExchanges)} /></Col>\r\n        <Col span={12}><Statistic title=\"Total Market Cap:\" value={`Rs ${millify(globalStats.totalMarketCap * value)}`} /></Col>\r\n        <Col span={12}><Statistic title=\"Total 24h Volume\" value={`Rs ${millify(globalStats.total24hVolume * value)}`} /></Col>\r\n        \r\n        <Col span={12}><Statistic title=\"Total Markets\" value={millify(globalStats.totalMarkets)} /></Col>\r\n      </Row>\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">Top 10 Cryptos In The World</Title>\r\n        <Title level={3} className=\"show-more\"><Link to=\"/cryptocurrencies\">Show more</Link></Title>\r\n      </div>\r\n      <Cryptocurrencies simplified />\r\n      <div className=\"home-heading-container\">\r\n        <Title level={2} className=\"home-title\">Latest Crypto News</Title>\r\n        <Title level={3}><Link to=\"/news\">Show more</Link></Title>\r\n      </div>\r\n      <News simplified />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Homepage\r\n","import React from 'react'\r\nimport { Switch, Route, Link } from 'react-router-dom'\r\nimport { Layout, Typography, Space } from 'antd'\r\n\r\nimport { Navbar, Exchanges, Cryptocurrencies, Homepage, CryptoDetailes, News } from './components'\r\nimport './App.css'\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"navbar\">\r\n                <Navbar />\r\n            </div>\r\n            <div className=\"main\">\r\n                <Layout>\r\n                    <div className=\"routes\">\r\n                        <Switch>\r\n                            <Route exact path=\"/\">\r\n                                <Homepage />\r\n                            </Route>\r\n                            <Route exact path=\"/exchanges\">\r\n                                <Exchanges />\r\n                            </Route>\r\n                            <Route exact path=\"/cryptocurrencies\">\r\n                                <Cryptocurrencies />\r\n                            </Route>\r\n                            <Route exact path=\"/crypto/:coinId\">\r\n                                <CryptoDetailes />\r\n                            </Route>\r\n                            <Route exact path=\"/news\">\r\n                                <News />\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                </Layout>\r\n\r\n                <div className=\"footer\">\r\n                    <Typography.Title level={5} style={{ color: 'white', textAlign: 'center' }}>\r\n                        Krypto-Knight\r\n                        All rights reserved\r\n                    </Typography.Title>\r\n                    <Space>\r\n                        <Link to='/'>Home</Link>\r\n                        <Link to='/exchanges'>Exchanges</Link>\r\n                        <Link to='/news'>News</Link>\r\n                    </Space>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { cryptoApi } from \"../services/cryptoApi\";\r\nimport { cryptoNewsApi } from \"../services/cryptoNewsApi\";\r\nimport { exchangeApi } from \"../services/exchangeApi\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        [cryptoApi.reducerPath]: cryptoApi.reducer,\r\n        [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\r\n        [exchangeApi.reducerPath]: exchangeApi.reducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware().concat(cryptoApi.middleware),\r\n})","import ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport App from './App';\r\nimport store from './app/store'\r\nimport 'antd/dist/antd.css'\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <Provider store={ store }>\r\n            <App />\r\n        </Provider>\r\n    </Router>,\r\n    document.getElementById('root'));"],"sourceRoot":""}